#version 460

#extension GL_GOOGLE_include_directive : require

#include <renderer/debug/printf>
#include <surfels/buffers/surfel_grid_r>
#include <surfels/buffers/surfel_pool_rw>
#include <surfels/buffers/surfel_stack_rw>
#include <surfels/surfel>

layout(std430, binding = 0) restrict readonly buffer b_TileCoverage
{
    surfel_tile_data g_TileData[];
};

layout(push_constant) uniform c_PushConstants
{
    uvec2 tilesCount;
}
g_Constants;

layout(local_size_x = OBLO_SUBGROUP_SIZE, local_size_y = 1, local_size_z = 1) in;

void main()
{
    const uvec2 resolution = g_Constants.tilesCount;
    const uvec2 screenPos = gl_GlobalInvocationID.xy;

    // if (screenPos == uvec2(1, 1))
    // {
    //     //     printf_float("Coverage: ", tile.coverage);
    //         printf_uvec2("Screen Pos: ", screenPos);
    //     printf_uvec2("Resolution: ", resolution);
    // }

    if (screenPos.x >= resolution.x || screenPos.y >= resolution.y)
    {
        return;
    }

    const uint tileIndex = resolution.x * screenPos.y + screenPos.x;
    const surfel_tile_data tile = g_TileData[tileIndex];

    const float SURFEL_SPAWN_THRESHOLD = .5f;

    if (tile.coverage < SURFEL_SPAWN_THRESHOLD)
    {
        uint newSurfelId;
        const bool allocated = surfel_stack_allocate(newSurfelId);

        if (debug_is_center(screenPos, resolution))
        {
            printf_int("[SPAWN] Allocated, available: ", g_SurfelStackHeader.available);
            //     printf_uint("Tile index:", tileIndex);
            printf_float("[SPAWN] Coverage: ", tile.coverage);
            //     printf_uvec2("Tile coord: ", screenPos);
            printf_vec3("[SPAWN] Spawn at: ", tile.position);

            if (allocated)
            {
                printf_int("[SPAWN] Spawn id: ", newSurfelId);
            }
            else
            {
                printf_int("[SPAWN] Failed to allocate, available: ", g_SurfelStackHeader.available);
            }
        }

        if (allocated)
        {
            surfel_data newSurfel;
            newSurfel.alive = true;
            newSurfel.position = tile.position;
            newSurfel.normal = tile.normal;

            g_SurfelData[newSurfelId] = newSurfel;
        }
    }
}