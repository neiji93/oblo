#version 460

#extension GL_GOOGLE_include_directive : require

#include <renderer/debug/printf>
#include <surfels/buffers/surfel_grid_r>
#include <surfels/buffers/surfel_pool_rw>
#include <surfels/buffers/surfel_stack_rw>
#include <surfels/surfel>

layout(std430, binding = 0) restrict readonly buffer b_TileCoverage
{
    surfel_tile_data g_TileData;
};

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

void main()
{
    const surfel_tile_data tile = g_TileData;

    if (tile.coverage < NO_SURFELS_NEEDED)
    {
        uint newSurfelId;
        const bool allocated = surfel_stack_allocate(newSurfelId);

#if 0
        {
            printf_int("[SPAWN] Allocated, available: ", g_SurfelStackHeader.available);
            //     printf_uint("Tile index:", tileIndex);
            printf_float("[SPAWN] Coverage: ", tile.coverage);
            //     printf_uvec2("Tile coord: ", screenPos);
            printf_vec3("[SPAWN] Spawn at: ", tile.position);

            if (allocated)
            {
                printf_int("[SPAWN] Spawn id: ", newSurfelId);
            }
            else
            {
                printf_int("[SPAWN] Failed to allocate, available: ", g_SurfelStackHeader.available);
            }
        }
#endif

        if (allocated)
        {
            surfel_data newSurfel;
            newSurfel.alive = true;
            newSurfel.position = tile.position;
            newSurfel.normal = tile.normal;

            g_SurfelData[newSurfelId] = newSurfel;
        }
    }
}